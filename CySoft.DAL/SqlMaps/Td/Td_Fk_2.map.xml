<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Td_Fk_2"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Td_Fk_2" type="CySoft.Model.Td.Td_Fk_2,CySoft.Model" />
    <typeAlias alias="Td_Fk_2_QueryModel" type="CySoft.Model.Td.Td_Fk_2_QueryModel,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
        <isNotNull prepend="and" property="id_bill">db.[id_bill]=#id_bill#</isNotNull>
        
        <isNotNull prepend="and" property="sort_id">db.[sort_id]=#sort_id#</isNotNull>
        <isNotNull prepend="and" property="id_bill_origin">db.[id_bill_origin]=#id_bill_origin#</isNotNull>
        <isNotNull prepend="and" property="bm_djlx_origin">db.[bm_djlx_origin]=#bm_djlx_origin#</isNotNull>
        <isNotNull prepend="and" property="dh_origin">db.[dh_origin]=#dh_origin#</isNotNull>
        <isNotNull prepend="and" property="je_origin">db.[je_origin]=#je_origin#</isNotNull>
        <isNotNull prepend="and" property="je_yf">db.[je_yf]=#je_yf#</isNotNull>
        <isNotNull prepend="and" property="je_wf">db.[je_wf]=#je_wf#</isNotNull>
        <isNotNull prepend="and" property="je_yh">db.[je_yh]=#je_yh#</isNotNull>
        <isNotNull prepend="and" property="je_fk">db.[je_fk]=#je_fk#</isNotNull>
        <isNotNull prepend="and" property="bz">db.[bz]=#bz#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
        <isNotNull prepend="," property="new_id_bill">db.[id_bill]=#new_id_bill#</isNotNull>
        
        <isNotNull prepend="," property="new_sort_id">db.[sort_id]=#new_sort_id#</isNotNull>
        <isNotNull prepend="," property="new_id_bill_origin">db.[id_bill_origin]=#new_id_bill_origin#</isNotNull>
        <isNotNull prepend="," property="new_bm_djlx_origin">db.[bm_djlx_origin]=#new_bm_djlx_origin#</isNotNull>
        <isNotNull prepend="," property="new_dh_origin">db.[dh_origin]=#new_dh_origin#</isNotNull>
        <isNotNull prepend="," property="new_je_origin">db.[je_origin]=#new_je_origin#</isNotNull>
        <isNotNull prepend="," property="new_je_yf">db.[je_yf]=#new_je_yf#</isNotNull>
        <isNotNull prepend="," property="new_je_wf">db.[je_wf]=#new_je_wf#</isNotNull>
        <isNotNull prepend="," property="new_je_yh">db.[je_yh]=#new_je_yh#</isNotNull>
        <isNotNull prepend="," property="new_je_fk">db.[je_fk]=#new_je_fk#</isNotNull>
        <isNotNull prepend="," property="new_bz">db.[bz]=#new_bz#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[td_fk_2]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="GetNextXh" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      select (isnull(max(db.xh),0)+1) value from <include refid="Table"/> as db <include refid="Where"/>
    </select>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Td_Fk_2_QueryModel">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_bill],db.[sort_id],db.[id_bill_origin],db.[bm_djlx_origin],db.[dh_origin],db.[je_origin],db.[je_yf],db.[je_wf],db.[je_yh],db.[je_fk],db.[bz],db.[rq_create]
      ,isnull(ts_djlx.mc,'') bm_djlx_name
      from <include refid="Table"/> as db
      left join ts_djlx ts_djlx on ts_djlx.bm=db.bm_djlx_origin


      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Td_Fk_2">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Td_Fk_2">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_bill],db.[sort_id],db.[id_bill_origin],db.[bm_djlx_origin],db.[dh_origin],db.[je_origin],db.[je_yf],db.[je_wf],db.[je_yh],db.[je_fk],db.[bz],db.[rq_create] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

