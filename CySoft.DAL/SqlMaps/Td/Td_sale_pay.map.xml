<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Td_Sale_Pay"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Td_Sale_Pay" type="CySoft.Model.Td.Td_Sale_Pay,CySoft.Model" />
    <typeAlias alias="Td_sale_pay_Query" type="CySoft.Model.Td.Td_sale_pay_Query,CySoft.Model" />
    
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="dhList">
          db.[dh] in <iterate property="dhList" conjunction="," open="(" close=")">#dhList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="dh">db.[dh]=#dh#</isNotNull>
        <isNotNull prepend="and" property="not_dh">db.[dh] <![CDATA[ <> ]]> #not_dh#</isNotNull>
        <isNotNull prepend="and" property="dh_order">db.[dh_order]=#dh_order#</isNotNull>
        <isNotNull prepend="and" property="id_gys">db.[id_gys]=#id_gys#</isNotNull>
        <isNotNull prepend="and" property="id_cgs">db.[id_cgs]=#id_cgs#</isNotNull>
        <isNotNull prepend="and" property="name_bank">db.[name_bank]=#name_bank#</isNotNull>
        <isNotNull prepend="and" property="account_bank">db.[account_bank]=#account_bank#</isNotNull>
        <isNotNull prepend="and" property="khr">db.[khr]=#khr#</isNotNull>
        <isNotNull prepend="and" property="flag_state">db.[flag_state]=#flag_state#</isNotNull>
        <isNotNull prepend="and" property="not_flag_state">db.[flag_state] <![CDATA[ <> ]]> #not_flag_state#</isNotNull>
        <isNotNull prepend="and" property="je">db.[je]=#je#</isNotNull>
        <isNotNull prepend="and" property="filename">db.[filename]=#filename#</isNotNull>
        <isNotNull prepend="and" property="flag_pay">db.[flag_pay]=#flag_pay#</isNotNull>
        <isNotNull prepend="and" property="dh_pay">db.[dh_pay]=#dh_pay#</isNotNull>
        <isNotNull prepend="and" property="flag_delete">db.[flag_delete]=#flag_delete#</isNotNull>
        <isNotNull prepend="and" property="not_flag_delete">db.[flag_delete] <![CDATA[ <> ]]> #not_flag_delete#</isNotNull>
        <isNotNull prepend="and" property="id_delete">db.[id_delete]=#id_delete#</isNotNull>
        <isNotNull prepend="and" property="rq_delete">db.[rq_delete]=#rq_delete#</isNotNull>
        <isNotNull prepend="and" property="start_rq_delete">Datediff(day,#start_rq_delete#,db.[rq_delete]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_delete">Datediff(day,db.[rq_delete],Convert(date,#end_rq_delete#)) > -1</isNotNull>
        <isNotNull prepend="and" property="remark">db.[remark]=#remark#</isNotNull>
        <isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
        <isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
        <isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="searchValuebycgs">(gycg.[alias_cgs] like #searchValuebycgs# or db.[dh_order] like #searchValuebycgs# or db.[dh] like #searchValuebycgs#)</isNotNull>
        <isNotNull prepend="and" property="searchValuebygys">(gycg.[alias_gys] like #searchValuebygys# or db.[dh_order] like #searchValuebygys# or db.[dh] like #searchValuebygys#)</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[dh] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_dh_order">db.[dh_order]=#new_dh_order#</isNotNull>
        <isNotNull prepend="," property="new_id_gys">db.[id_gys]=#new_id_gys#</isNotNull>
        <isNotNull prepend="," property="new_id_cgs">db.[id_cgs]=#new_id_cgs#</isNotNull>
        <isNotNull prepend="," property="new_name_bank">db.[name_bank]=#new_name_bank#</isNotNull>
        <isNotNull prepend="," property="new_account_bank">db.[account_bank]=#new_account_bank#</isNotNull>
        <isNotNull prepend="," property="new_khr">db.[khr]=#new_khr#</isNotNull>
        <isNotNull prepend="," property="new_flag_state">db.[flag_state]=#new_flag_state#</isNotNull>
        <isNotNull prepend="," property="new_je">db.[je]=#new_je#</isNotNull>
        <isNotNull prepend="," property="new_filename">db.[filename]=#new_filename#</isNotNull>
        <isNotNull prepend="," property="new_flag_pay">db.[flag_pay]=#new_flag_pay#</isNotNull>
        <isNotNull prepend="," property="new_dh_pay">db.[dh_pay]=#new_dh_pay#</isNotNull>
        <isNotNull prepend="," property="new_flag_delete">db.[flag_delete]=#new_flag_delete#</isNotNull>
        <isNotNull prepend="," property="new_id_delete">db.[id_delete]=#new_id_delete#</isNotNull>
        <isNotNull prepend="," property="new_rq_delete">db.[rq_delete]=#new_rq_delete#</isNotNull>
        <isNotNull prepend="," property="new_remark">db.[remark]=#new_remark#</isNotNull>
        <isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
        <isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
        <isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[Td_sale_pay]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Td_sale_pay_Query">
      set nocount on
      <include refid="NoLock" />
      select db.[dh],db.[dh_order],db.[id_gys],db.[id_cgs],db.[name_bank],db.[account_bank],db.[khr],db.[flag_state],db.[je],db.[filename]
      ,(case ltrim(rtrim(db.[flag_pay]))  when  'onlink' then '线上付款'  when 'platform' then '平台付款'  else '线下付款' end) as flag_pay
      ,db.[dh_pay],db.[flag_delete],db.[id_delete],db.[rq_delete],db.[remark],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit]
      , um.companyname as cgs_name
      from <include refid="Table"/> as db
      left join Tb_cgs cg on db.id_cgs=cg.id
      left join Tb_user um on cg.id_user_master=um.id
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Td_sale_pay_Query">
      set nocount on
      <include refid="NoLock" />
      select um.companyname as cgs_name,t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      left join Tb_cgs cg on t.id_cgs=cg.id
      left join Tb_user um on cg.id_user_master=um.id
      <include refid="RowBetween" />
    </select>

    <select id="QueryPageforView" parameterClass="System.Collections.IDictionary" resultClass="Td_sale_pay_Query">
      set nocount on
      <include refid="NoLock" />
      select  t.cgs_name,t.gys_name,t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.*,gycg.alias_cgs as cgs_name,gycg.alias_gys
      as gys_name from <include refid="Table"/> as db
      left join Tb_gys_cgs gycg on gycg.id_cgs=db.id_cgs and gycg.id_gys=db.id_gys <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>
    
    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="QueryCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      left join Tb_gys_cgs gycg on gycg.id_cgs=db.id_cgs and gycg.id_gys=db.id_gys
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Td_Sale_Pay">
      set nocount on
      <include refid="NoLock" />
      select db.[dh],db.[dh_order],db.[id_gys],db.[id_cgs],db.[name_bank],db.[account_bank],db.[khr],db.[flag_state],db.[je],db.[filename],db.[flag_pay],db.[dh_pay],db.[flag_delete],db.[id_delete],db.[rq_delete],db.[remark],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

