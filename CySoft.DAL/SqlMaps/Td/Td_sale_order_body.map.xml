<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Td_Sale_Order_Body"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Td_Sale_Order_Body" type="CySoft.Model.Td.Td_Sale_Order_Body,CySoft.Model" />
    <typeAlias alias="Td_Sale_Order_Body_Query" type="CySoft.Model.Td.Td_Sale_Order_Body_Query,CySoft.Model" />
    <typeAlias alias="Td_Report" type="CySoft.Model.Td.Td_Report,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="dhList">
          db.[dh] in <iterate property="dhList" conjunction="," open="(" close=")">#dhList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="flag_state_List">
          head.[flag_state] in <iterate property="flag_state_List" conjunction="," open="(" close=")">#flag_state_List[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="dh">db.[dh]=#dh#</isNotNull>
        <isNotNull prepend="and" property="not_dh">db.[dh] <![CDATA[ <> ]]> #not_dh#</isNotNull>
        <isNotNull prepend="and" property="xhList">
          db.[xh] in <iterate property="xhList" conjunction="," open="(" close=")">#xhList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="xh">db.[xh]=#xh#</isNotNull>
        <isNotNull prepend="and" property="not_xh">db.[xh] <![CDATA[ <> ]]> #not_xh#</isNotNull>
        <isNotNull prepend="and" property="id_sku">db.[id_sku]=#id_sku#</isNotNull>
        <isNotNull prepend="and" property="id_sp">db.[id_sp]=#id_sp#</isNotNull>
        <isNotNull prepend="and" property="unit">db.[unit]=#unit#</isNotNull>
        <isNotNull prepend="and" property="zhl">db.[zhl]=#zhl#</isNotNull>
        <isNotNull prepend="and" property="sl">db.[sl]=#sl#</isNotNull>
        <isNotNull prepend="and" property="sl_ck">db.[sl_ck]=#sl_ck#</isNotNull>
        <isNotNull prepend="and" property="sl_fh">db.[sl_fh]=#sl_fh#</isNotNull>
        <isNotNull prepend="and" property="slv">db.[slv]=#slv#</isNotNull>
        <isNotNull prepend="and" property="dj_bhs">db.[dj_bhs]=#dj_bhs#</isNotNull>
        <isNotNull prepend="and" property="dj_hs">db.[dj_hs]=#dj_hs#</isNotNull>
        <isNotNull prepend="and" property="je_hs">db.[je_hs]=#je_hs#</isNotNull>
        <isNotNull prepend="and" property="je_pay">db.[je_pay]=#je_pay#</isNotNull>
        <isNotNull prepend="and" property="remark">db.[remark]=#remark#</isNotNull>
        <isNotNull prepend="and" property="id_gys">
          EXISTS(SELECT 1 FROM Td_Sale_Order_Head WHERE dh=db.dh AND id_gys=#id_gys#)
        </isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,head.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,head.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="sp_mc">exists(select 1 from tb_sp sp where db.id_sp=sp.id and (sp.mc like #sp_mc# or gyssp.bm_Interface like #sp_mc#))</isNotNull>
        <isNotNull prepend="and" property="alias_cgs">gyscgs.alias_cgs like #alias_cgs#</isNotNull>
        <isNotNull prepend="and" property="id_cgs_level">gyscgs.id_cgs_level=#id_cgs_level#</isNotNull>
        <isNotNull prepend="and" property="id_spfl">(gyssp.id_spfl=#id_spfl# or spfl.fatherId=#id_spfl#)</isNotNull>
        <isNotNull prepend="and" property="not_flag_state">head.[flag_state]<![CDATA[ <> ]]> #not_flag_state#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[dh] asc,db.[xh] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_sku">db.[id_sku]=#new_id_sku#</isNotNull>
        <isNotNull prepend="," property="new_id_sp">db.[id_sp]=#new_id_sp#</isNotNull>
        <isNotNull prepend="," property="new_unit">db.[unit]=#new_unit#</isNotNull>
        <isNotNull prepend="," property="new_zhl">db.[zhl]=#new_zhl#</isNotNull>
        <isNotNull prepend="," property="new_sl">db.[sl]=#new_sl#</isNotNull>
        <isNotNull prepend="," property="new_sl_ck">db.[sl_ck]=#new_sl_ck#</isNotNull>
        <isNotNull prepend="," property="new_sl_fh">db.[sl_fh]=#new_sl_fh#</isNotNull>
        <isNotNull prepend="," property="new_slv">db.[slv]=#new_slv#</isNotNull>
        <isNotNull prepend="," property="new_dj_bhs">db.[dj_bhs]=#new_dj_bhs#</isNotNull>
        <isNotNull prepend="," property="new_dj_hs">db.[dj_hs]=#new_dj_hs#</isNotNull>
        <isNotNull prepend="," property="new_je_hs">db.[je_hs]=#new_je_hs#</isNotNull>
        <isNotNull prepend="," property="new_je_pay">db.[je_pay]=#new_je_pay#</isNotNull>
        <isNotNull prepend="," property="new_remark">db.[remark]=#new_remark#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[Td_sale_order_body]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>
    
    <select id="QueryStatisticsInfo" parameterClass="System.Collections.IDictionary" resultClass="Td_Report">
      select count(distinct t.dh) as ordercount,sum(t.sl) as customercount,sum(t.je_pay) as money from (select db.dh,db.je_pay,db.sl from Td_sale_order_body as db
      left join Td_sale_order_head head on db.dh=head.dh
      left join Tb_gys_cgs gyscgs on gyscgs.id_cgs=head.id_cgs and gyscgs.id_gys=head.id_gys
      left join tb_gys_sp gyssp on gyssp.id_sku=db.id_sku and gyscgs.id_gys=head.id_gys
      left join Tb_sp sp on db.id_sp=sp.id
      left join Tb_spfl spfl on spfl.id=gyssp.id_spfl
     <include refid="Where"/>) as t
    </select>

    <select id="QueryStatisticsCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      select count(*) from (select db.dh from Td_sale_order_body as db
      left join Td_sale_order_head head on db.dh=head.dh
      left join Tb_gys_cgs gyscgs on gyscgs.id_cgs=head.id_cgs and gyscgs.id_gys=head.id_gys
      left join tb_gys_sp gyssp on gyssp.id_sku=db.id_sku and gyscgs.id_gys=head.id_gys
      left join Tb_sp sp on db.id_sp=sp.id
      left join Tb_spfl spfl on spfl.id=gyssp.id_spfl
      <include refid="Where"/>) as t
    </select>
    
    <select id="QueryStatisticsPage" parameterClass="System.Collections.IDictionary" resultClass="Td_Sale_Order_Body_Query">
      select t.* from
      (select row_number() over(order by head.rq_create desc) as rownumber,
      gyscgs.alias_cgs,db.dh,head.flag_state,head.rq_create,gyssp.bm_Interface as GoodsBm,
      sp.mc+isnull('【'+stuff(( select  ','+td.mc+':'+td.val  from (select expt.*,temp.mc from [dbo].[Tb_sp_expand] expt left join [dbo].[Tb_sp_expand_template] temp on temp.id=expt.id_sp_expand_template)as td
      where td.id_sku=db.id_sku
      for xml path('')),1,1,'')+'】','') as GoodsName,db.sl,db.dj_hs,db.je_pay from
      Td_sale_order_body as db
      left join Td_sale_order_head head on db.dh=head.dh
      left join Tb_gys_cgs gyscgs on gyscgs.id_cgs=head.id_cgs and gyscgs.id_gys=head.id_gys
      left join tb_gys_sp gyssp on gyssp.id_sku=db.id_sku and gyscgs.id_gys=head.id_gys
      left join Tb_sp sp on db.id_sp=sp.id
      left join Tb_spfl spfl on spfl.id=gyssp.id_spfl
      <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>
    
    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Td_Sale_Order_Body_Query">
		set nocount on
		<include refid="NoLock" />
      select
      (case isnull(gyssp.bm_Interface,'') when '' then spsku.bm else gyssp.bm_Interface end) as bm
      ,spsku.unit as unit
      ,stuff(( select  ','+td.mc+':'+td.val  from (select expt.*,temp.mc from [dbo].[Tb_sp_expand] expt left join [dbo].[Tb_sp_expand_template] temp on temp.id=expt.id_sp_expand_template)as td
      where td.id_sku=db.id_sku
      for xml path('')),1,1,'') as formatname,sp.mc as GoodsName,sp.id as id_sp ,gyssp.bm_Interface as GoodsBm,
      db.[dh],db.[xh],db.[id_sku],db.[id_sp],db.[unit],db.[zhl],db.[sl],db.[sl_ck],db.[sl_fh],db.[slv],db.[dj_bhs],db.[dj_hs],db.[je_hs],db.[je_pay],db.[remark]
      ,gyssp.dj_base as dj_base
      ,isnull(spcgs.sl_dh_min,isnull(dj.sl_dh_min,0)) as sl_dh_min
      ,isnull(spcgs.dj_dh,isnull(dj.dj_dh,gyssp.dj_base)) as dj
      ,spsku.barcode
      ,<isNotNull property="baseurl">#baseurl#+</isNotNull>spsku.photo_min2 as photo
      from <include refid="Table"/> as db
      left join Td_sale_order_head h on h.dh=db.dh
      left join Tb_sp_sku spsku on spsku.id=db.id_sku
      left join Tb_sp sp on sp.id=spsku.id_sp
      left join Tb_gys_sp gyssp on gyssp.id_sku=db.id_sku and gyssp.id_gys= h.id_gys
      left join Tb_gys_cgs gc on gc.id_cgs=h.id_cgs and gc.id_gys =h.id_gys
      left join Tb_sp_dj dj on dj.id_sku=db.id_sku and dj.id_cgs_level=gc.id_cgs_level
      left join Tb_sp_cgs spcgs on spcgs.id_sku = db.id_sku and spcgs.id_gys = h.id_gys and spcgs.id_cgs = h.id_cgs
      <include refid="Where"/>
		<include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Td_Sale_Order_Body">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Td_Sale_Order_Body">
      set nocount on
      <include refid="NoLock" />
      select db.[dh],db.[xh],db.[id_sku],db.[id_sp],db.[unit],db.[zhl],db.[sl],db.[sl_ck],db.[sl_fh],db.[slv],db.[dj_bhs],db.[dj_hs],db.[je_hs],db.[je_pay],db.[remark] 
      from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>
    
  </statements>
</sqlMap>




