<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Td_Ls_Jb_1"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Td_Ls_Jb_1" type="CySoft.Model.Td.Td_Ls_Jb_1,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
        <isNotNull prepend="and" property="rq_jb">db.[rq_jb]=#rq_jb#</isNotNull>
        <isNotNull prepend="and" property="start_rq_jb">Datediff(day,#start_rq_jb#,db.[rq_jb]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_jb">Datediff(day,db.[rq_jb],Convert(date,#end_rq_jb#)) > -1</isNotNull>
        <isNotNull prepend="and" property="bz">db.[bz]=#bz#</isNotNull>
        <isNotNull prepend="and" property="rq_firstbill">db.[rq_firstbill]=#rq_firstbill#</isNotNull>
        <isNotNull prepend="and" property="start_rq_firstbill">Datediff(day,#start_rq_firstbill#,db.[rq_firstbill]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_firstbill">Datediff(day,db.[rq_firstbill],Convert(date,#end_rq_firstbill#)) > -1</isNotNull>
        <isNotNull prepend="and" property="rq_lastbill">db.[rq_lastbill]=#rq_lastbill#</isNotNull>
        <isNotNull prepend="and" property="start_rq_lastbill">Datediff(day,#start_rq_lastbill#,db.[rq_lastbill]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_lastbill">Datediff(day,db.[rq_lastbill],Convert(date,#end_rq_lastbill#)) > -1</isNotNull>
        <isNotNull prepend="and" property="je_xs">db.[je_xs]=#je_xs#</isNotNull>
        <isNotNull prepend="and" property="je_xsth">db.[je_xsth]=#je_xsth#</isNotNull>
        <isNotNull prepend="and" property="bs_xs">db.[bs_xs]=#bs_xs#</isNotNull>
        <isNotNull prepend="and" property="bs_xsth">db.[bs_xsth]=#bs_xsth#</isNotNull>
        <isNotNull prepend="and" property="je_backup">db.[je_backup]=#je_backup#</isNotNull>
        <isNotNull prepend="and" property="flag_jb">db.[flag_jb]=#flag_jb#</isNotNull>
        <isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
        <isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
        <isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="flag_delete">db.[flag_delete]=#flag_delete#</isNotNull>
        <isNotNull prepend="and" property="id_shop">db.[id_shop]=#id_shop#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
        <isNotNull prepend="," property="new_rq_jb">db.[rq_jb]=#new_rq_jb#</isNotNull>
        <isNotNull prepend="," property="new_bz">db.[bz]=#new_bz#</isNotNull>
        <isNotNull prepend="," property="new_rq_firstbill">db.[rq_firstbill]=#new_rq_firstbill#</isNotNull>
        <isNotNull prepend="," property="new_rq_lastbill">db.[rq_lastbill]=#new_rq_lastbill#</isNotNull>
        <isNotNull prepend="," property="new_je_xs">db.[je_xs]=#new_je_xs#</isNotNull>
        <isNotNull prepend="," property="new_je_xsth">db.[je_xsth]=#new_je_xsth#</isNotNull>
        <isNotNull prepend="," property="new_bs_xs">db.[bs_xs]=#new_bs_xs#</isNotNull>
        <isNotNull prepend="," property="new_bs_xsth">db.[bs_xsth]=#new_bs_xsth#</isNotNull>
        <isNotNull prepend="," property="new_je_backup">db.[je_backup]=#new_je_backup#</isNotNull>
        <isNotNull prepend="," property="new_flag_jb">db.[flag_jb]=#new_flag_jb#</isNotNull>
        <isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
        <isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
        <isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
        <isNotNull prepend="," property="new_flag_delete">db.[flag_delete]=#new_flag_delete#</isNotNull>
        <isNotNull prepend="," property="new_id_shop">db.[id_shop]=#new_id_shop#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[td_ls_jb_1]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Td_Ls_Jb_1">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[rq_jb],db.[bz],db.[rq_firstbill],db.[rq_lastbill],db.[je_xs],db.[je_xsth],db.[bs_xs],db.[bs_xsth],db.[je_backup],db.[flag_jb],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit],db.[flag_delete],db.[id_shop] from <include refid="Table"/> as db
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Td_Ls_Jb_1">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Td_Ls_Jb_1">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[rq_jb],db.[bz],db.[rq_firstbill],db.[rq_lastbill],db.[je_xs],db.[je_xsth],db.[bs_xs],db.[bs_xsth],db.[je_backup],db.[flag_jb],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit],db.[flag_delete],db.[id_shop] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>
