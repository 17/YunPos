<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Cgs"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Tb_Cgs" type="CySoft.Model.Tb.Tb_Cgs,CySoft.Model" />
		<typeAlias alias="Tb_Cgs_Edit" type="CySoft.Model.Tb.Tb_Cgs_Edit,CySoft.Model" />
	</alias>
	<statements>
		<sql id="Where">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="idList">
					db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
				</isNotNull>
				<isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
				<isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
				<isNotNull prepend="and" property="id_user_master">db.[id_user_master]=#id_user_master#</isNotNull>
				<isNotNull prepend="and" property="id_cgs_ptjb">db.[id_cgs_ptjb]=#id_cgs_ptjb#</isNotNull>
				<isNotNull prepend="and" property="flag_pay">db.[flag_pay]=#flag_pay#</isNotNull>
				<isNotNull prepend="and" property="name_bank">db.[name_bank]=#name_bank#</isNotNull>
				<isNotNull prepend="and" property="account_bank">db.[account_bank]=#account_bank#</isNotNull>
				<isNotNull prepend="and" property="khr">db.[khr]=#khr#</isNotNull>
				<isNotNull prepend="and" property="no_tax">db.[no_tax]=#no_tax#</isNotNull>
				<isNotNull prepend="and" property="title_invoice">db.[title_invoice]=#title_invoice#</isNotNull>
				<isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
				<isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
				<isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
				<isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
				<isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
				<isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="id_user_master_gys">gc.[id_user_master_gys]=#id_user_master_gys#</isNotNull>
			</dynamic>
		</sql>

		<sql id="Order">
			<dynamic prepend="order by">
				<isNull property="sort">db.[id] asc</isNull>
				<isNotNull property="sort">
					$sort$
					<isNotNull property="dir">
						<isEqual compareValue="asc" property="dir">asc</isEqual>
						<isEqual compareValue="desc" property="dir">desc</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Set">
			<dynamic prepend="set">
				<isNotNull prepend="," property="new_id_user_master">db.[id_user_master]=#new_id_user_master#</isNotNull>
				<isNotNull prepend="," property="new_id_cgs_ptjb">db.[id_cgs_ptjb]=#new_id_cgs_ptjb#</isNotNull>
				<isNotNull prepend="," property="new_flag_pay">db.[flag_pay]=#new_flag_pay#</isNotNull>
				<isNotNull prepend="," property="new_name_bank">db.[name_bank]=#new_name_bank#</isNotNull>
				<isNotNull prepend="," property="new_account_bank">db.[account_bank]=#new_account_bank#</isNotNull>
				<isNotNull prepend="," property="new_khr">db.[khr]=#new_khr#</isNotNull>
				<isNotNull prepend="," property="new_no_tax">db.[no_tax]=#new_no_tax#</isNotNull>
				<isNotNull prepend="," property="new_title_invoice">db.[title_invoice]=#new_title_invoice#</isNotNull>
				<isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
				<isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
				<isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
				<isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
			</dynamic>
		</sql>

		<sql id="RowBetween">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="start">
					t.rownumber between (#start# + 1)
					<isNotNull prepend="and" property="limit">
						(#start# + #limit#)
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Table">
			<isNotNull property="database">[$database$]..</isNotNull>[Tb_cgs]
		</sql>

		<sql id="NoLock">
			set transaction isolation level read uncommitted
		</sql>

		<delete id="Delete" parameterClass="System.Collections.IDictionary">
			set nocount on
			delete db from <include refid="Table"/> as db <include refid="Where"/>
		</delete>

		<update id="UpdatePart" parameterClass="System.Collections.IDictionary">
			set nocount on
			update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
		</update>

		<select id="GetNextKey" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			select (isnull(max(db.id),0)+1) as value from <include refid="Table"/> as db <include refid="Where"/>
		</select>

		<select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs">
			set nocount on
			<include refid="NoLock" />
			select db.[id],db.[id_user_master],db.[id_cgs_ptjb],db.[flag_pay],db.[name_bank],db.[account_bank],db.[khr],db.[no_tax],db.[title_invoice],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit] from <include refid="Table"/> as db
			<include refid="Where"/>
			<include refid="Order"/>
		</select>

		<select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs">
			set nocount on
			<include refid="NoLock" />
			select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
			<include refid="RowBetween" />
		</select>

		<select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
			<include refid="Where"/>
		</select>

		<select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[id_user_master],db.[id_cgs_ptjb],db.[flag_pay],db.[name_bank],db.[account_bank],db.[khr],db.[no_tax],db.[title_invoice],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit],um.companyname
      from <include refid="Table"/> as db
      left join Tb_user as um on um.id = db.id_user_master
      <include refid="Where"/>
		</select>

		<select id="QueryItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs_Edit">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[id_user_master],db.[id_cgs_ptjb],db.[flag_pay],db.[name_bank],db.[account_bank],db.[khr],db.[no_tax],db.[title_invoice],
      gc.alias_cgs as companyname,
      um.username,
      um.id_province,
      um.id_city,
      um.id_county,
      um.name,
      um.phone,
      (CASE tcs.tel WHEN '' THEN um.tel when null THEN um.tel ELSE tcs.tel END) tel,
      um.qq,
      um.job,
      um.email,
      um.fax,
      um.zipcode,
      um.address,
      gc.rq_treaty_start,
      gc.rq_treaty_end,
      (CASE ISnull(account.id_user,0) WHEN 0 THEN 0 ELSE 1 END)flag_activeed,
      gc.bm_gys_Interface,
      gc.id_cgs_level,
      lev.name as name_cgs_level,
      um.id_hy,
      hy.name as name_hy,
      gc.id_gys,
      province.name as name_province,city.name as name_city,county.name as name_county
      from <include refid="Table"/> as db
			inner join Tb_gys_cgs as gc on gc.id_user_master_cgs = db.id_user_master
			left join Tb_user as um on um.id = db.id_user_master
			left join Tb_cgs_level as lev on lev.id = gc.id_cgs_level
			left join Tb_hy as hy on hy.id = um.id_hy
			left join Tb_Districts as province on province.id = um.id_province
			left join Tb_Districts as city on city.id = um.id_city
			left join Tb_Districts as county on county.id = um.id_county
			LEFT JOIN  (SELECT id_user FROM Tb_account GROUP BY id_user)account ON account.id_user=um.id
			LEFT JOIN (SELECT a.id_user_master_cgs,b.tel FROM Tb_gys_cgs AS a,Tb_cgs_shdz AS b where a.id_cgs = b.id_cgs) as tcs ON db.id_user_master = tcs.id_user_master_cgs
			<include refid="Where"/>
		</select>

    <select id="QueryGysOfCgs" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[id_user_master],db.[id_cgs_ptjb],db.[flag_pay],db.[name_bank],db.[account_bank],db.[khr],db.[no_tax],db.[title_invoice],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit]
      from <include refid="Table"/> as db
      left join Tb_gys on db.id_user_master = Tb_gys.id_user_master
      <include refid="WhereGysOfCgs"/>
    </select>
    <sql id="WhereGysOfCgs">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id_gys">Tb_gys.[id]=#id_gys#</isNotNull>
      </dynamic>
    </sql>


	</statements>
</sqlMap>