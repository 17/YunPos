<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Role_Pos_Function"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Role_Pos_Function" type="CySoft.Model.Tb.Tb_Role_Pos_Function,CySoft.Model" />
    <typeAlias alias="Tb_Role_Pos_FunctionWithName" type="CySoft.Model.Tb.Tb_Role_Pos_FunctionWithName,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id_roleList">
          db.[id_role] in <iterate property="id_roleList" conjunction="," open="(" close=")">#id_roleList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id_role">db.[id_role]=#id_role#</isNotNull>
        <isNotNull prepend="and" property="not_id_role">db.[id_role] <![CDATA[ <> ]]> #not_id_role#</isNotNull>
        <isNotNull prepend="and" property="id_pos_functionList">
          db.[id_pos_function] in <iterate property="id_pos_functionList" conjunction="," open="(" close=")">#id_pos_functionList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id_pos_function">db.[id_pos_function]=#id_pos_function#</isNotNull>
        <isNotNull prepend="and" property="not_id_pos_function">db.[id_pos_function] <![CDATA[ <> ]]> #not_id_pos_function#</isNotNull>
        <isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="maxvalue">db.[maxvalue]=#maxvalue#</isNotNull>
        <isNotNull prepend="and" property="minvalue">db.[minvalue]=#minvalue#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="nlast">db.[nlast]=#nlast#</isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
        <isNotNull prepend="and" property="flag_use">db.[flag_use]=#flag_use#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id_role] asc,db.[id_pos_function] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_maxvalue">db.[maxvalue]=#new_maxvalue#</isNotNull>
		    <isNotNull prepend="," property="new_minvalue">db.[minvalue]=#new_minvalue#</isNotNull>
        <isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
        <isNotNull prepend="," property="new_nlast">db.[nlast]=#new_nlast#</isNotNull>
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
        <isNotNull prepend="," property="new_flag_use">db.[flag_use]=#new_flag_use#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[tb_role_pos_function]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Role_Pos_FunctionWithName">
      set nocount on
      <include refid="NoLock" />
      select db.[id_role],db.[id_pos_function],db.[maxvalue],db.[minvalue],db.[id_create],db.[rq_create],db.[nlast],db.[flag_use],db.[id_masteruser],pf.mc func_name from
      <include refid="Table"/> as db
      left join dbo.tb_pos_function pf on db.id_pos_function=pf.id
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Role_Pos_Function">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Role_Pos_Function">
      set nocount on
      <include refid="NoLock" />
      select db.[id_role],db.[id_pos_function],db.[maxvalue],db.[minvalue],db.[id_create],db.[rq_create],db.[nlast],db.[flag_use],db.[id_masteruser] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

