<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Advertis"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Advertis" type="CySoft.Model.Tb.Tb_Advertis,CySoft.Model" />
  </alias>
  <statements>
	<sql id="Where">
	  <dynamic prepend="where">
		<isNotNull prepend="and" property="idList">
			db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
		<isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
		<isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="title">db.[title]=#title#</isNotNull>
		<isNotNull prepend="and" property="flag_type">db.[flag_type]=#flag_type#</isNotNull>
        <isNotNull prepend="and" property="id_user_master">db.[id_user_master]=#id_user_master#</isNotNull>
        <isNotNull prepend="and" property="info">db.[info]=#info#</isNotNull>
        <isNotNull prepend="and" property="url">db.[url]=#url#</isNotNull>
        <isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
		<isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
		<isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="filename">db.[filename]=#filename#</isNotNull>
        <isNotNull prepend="and" property="sorts">db.[sort]=#sort#</isNotNull>
        <isNotNull prepend="and" property="click">db.[click]=#click#</isNotNull>
      <isNotNull prepend="and" property="isuse">db.[isuse]=#isuse#</isNotNull>
      <isNotNull prepend="and" property="id_cgs">
         exists
        (select 1 from Tb_gys_cgs where id_user_master_gys=db.[id_user_master] and id_cgs=#id_cgs#)
      </isNotNull>
      </dynamic>
    </sql>
	
	<sql id="Order">
	  <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
			db.$sort$
			<isNotNull property="dir">
				<isEqual compareValue="asc" property="dir">asc</isEqual>
				<isEqual compareValue="desc" property="dir">desc</isEqual>
			</isNotNull>
		</isNotNull>
	  </dynamic>
    </sql>
	
	<sql id="Set">
      <dynamic prepend="set">
		<isNotNull prepend="," property="new_title">db.[title]=#new_title#</isNotNull>
		<isNotNull prepend="," property="new_flag_type">db.[flag_type]=#new_flag_type#</isNotNull>
		<isNotNull prepend="," property="new_id_user_master">db.[id_user_master]=#new_id_user_master#</isNotNull>
		<isNotNull prepend="," property="new_info">db.[info]=#new_info#</isNotNull>
		<isNotNull prepend="," property="new_url">db.[url]=#new_url#</isNotNull>
		<isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
		<isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
		<isNotNull prepend="," property="new_filename">db.[filename]=#new_filename#</isNotNull>
		<isNotNull prepend="," property="new_sort">db.[sort]=#new_sort#</isNotNull>
		<isNotNull prepend="," property="new_click">db.[click]=#new_click#</isNotNull>
    <isNotNull prepend="," property="new_isuse">db.[isuse]=#new_isuse#</isNotNull>
      </dynamic>
    </sql>
	
	<sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>
    
    <sql id="Table">
        <isNotNull property="database">[$database$]..</isNotNull>[Tb_Advertis]
    </sql>
	
	<sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>
	
	<delete id="Delete" parameterClass="System.Collections.IDictionary">
		set nocount on
		delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>
	
	<update id="UpdatePart" parameterClass="System.Collections.IDictionary">
		set nocount on
		update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

	<select id="GetNextKey" parameterClass="System.Collections.IDictionary" resultClass="int">
		set nocount on
		select (isnull(max(db.id),0)+1) as value from <include refid="Table"/> as db <include refid="Where"/>
    </select>
	
	<select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Advertis">
		set nocount on
		<include refid="NoLock" />
    select db.[id],db.[title],db.[flag_type],db.[id_user_master],db.[info],db.[url],db.[id_edit],db.[rq_edit],db.[filename],db.[sort],db.[click],db.[isuse] from <include refid="Table"/> as db
    <include refid="Where"/>
		<include refid="Order"/>
    </select>
	
	<select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Advertis">
		set nocount on
		<include refid="NoLock" />  
		select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
		<include refid="RowBetween" />
    </select>
	
	<select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
		set nocount on
		<include refid="NoLock" />  
		select count(1) as value from <include refid="Table"/> as db
		<include refid="Where"/>
    </select>
	
	<select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Advertis">
		set nocount on
		<include refid="NoLock" />
    select db.[id],db.[title],db.[flag_type],db.[id_user_master],db.[info],db.[url],db.[id_edit],db.[rq_edit],db.[filename],db.[sort],db.[click],db.[isuse] from <include refid="Table"/> as db
    <include refid="Where"/>
    </select>
	
  </statements>
</sqlMap>

