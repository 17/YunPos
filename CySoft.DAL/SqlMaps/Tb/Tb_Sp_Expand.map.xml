<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Sp_Expand"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Sp_Expand" type="CySoft.Model.Tb.Tb_Sp_Expand,CySoft.Model" />
    <typeAlias alias="Tb_Sp_Expand_Query" type="CySoft.Model.Tb.Tb_Sp_Expand_Query,CySoft.Model" />
  </alias>
  <statements>
	  <sql id="Where">
		  <dynamic prepend="where">
			  <isNotNull prepend="and" property="id_skuList">
				  db.[id_sku] in <iterate property="id_skuList" conjunction="," open="(" close=")">#id_skuList[]#</iterate>
			  </isNotNull>
			  <isNotNull prepend="and" property="id_sku">db.[id_sku]=#id_sku#</isNotNull>
			  <isNotNull prepend="and" property="not_id_sku">db.[id_sku] <![CDATA[ <> ]]> #not_id_sku#</isNotNull>
			  <isNotNull prepend="and" property="id_sp_expand_template">db.[id_sp_expand_template]=#id_sp_expand_template#</isNotNull>
			  <isNotNull prepend="and" property="id_sp">db.[id_sp]=#id_sp#</isNotNull>
			  <isNotNull prepend="and" property="val">db.[val]=#val#</isNotNull>
			  <isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
			  <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
			  <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
			  <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
			  <isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
			  <isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
			  <isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
			  <isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
			  <isNotNull prepend="and" property="fatherId_sp_expand_template">
				  exists(select 1 from Tb_sp_expand_template as b where b.fatherid = #fatherId_sp_expand_template# and b.id = db.id_sp_expand_template)
			  </isNotNull>
			  <isNotNull property="flag_cart">
				  <isEqual compareValue="1" prepend="and" property="flag_cart">
					  exists(select 1 from Td_sale_cart as cart where cart.id_sku = db.id_sku and cart.id_cgs = #id_cgs#)
				  </isEqual>
			  </isNotNull>
		  </dynamic>
	  </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id_sku] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_sp_expand_template">db.[id_sp_expand_template]=#new_id_sp_expand_template#</isNotNull>
        <isNotNull prepend="," property="new_val">db.[val]=#new_val#</isNotNull>
        <isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
        <isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
        <isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[Tb_sp_expand]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Sp_Expand_Query">
      set nocount on
      <include refid="NoLock" />
		select db.[id_sku],db.[id_sp_expand_template],db.id_sp,db.[val],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit],t.mc from <include refid="Table"/> as db
      left join Tb_sp_expand_template t on t.id=db.id_sp_expand_template
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Sp_Expand">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Sp_Expand">
      set nocount on
      <include refid="NoLock" />
		select db.[id_sku],db.[id_sp_expand_template],db.id_sp,db.[val],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

