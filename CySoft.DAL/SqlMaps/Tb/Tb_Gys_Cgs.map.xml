<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Gys_Cgs"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Tb_Gys_Cgs" type="CySoft.Model.Tb.Tb_Gys_Cgs,CySoft.Model" />
		<typeAlias alias="Tb_Gys_Cgs_Query" type="CySoft.Model.Tb.Tb_Gys_Cgs_Query,CySoft.Model" />
	</alias>
	<statements>
		<sql id="Where">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="id_user_master_gysList">
					db.[id_user_master_gys] in <iterate property="id_user_master_gysList" conjunction="," open="(" close=")">#id_user_master_gysList[]#</iterate>
				</isNotNull>
				<isNotNull prepend="and" property="id_user_master_gys">db.[id_user_master_gys]=#id_user_master_gys#</isNotNull>
				<isNotNull prepend="and" property="not_id_user_master_gys">db.[id_user_master_gys] <![CDATA[ <> ]]> #not_id_user_master_gys#</isNotNull>
				<isNotNull prepend="and" property="id_user_master_cgsList">
					db.[id_user_master_cgs] in <iterate property="id_user_master_cgsList" conjunction="," open="(" close=")">#id_user_master_cgsList[]#</iterate>
				</isNotNull>
				<isNotNull prepend="and" property="id_user_master_cgs">db.[id_user_master_cgs]=#id_user_master_cgs#</isNotNull>
				<isNotNull prepend="and" property="not_id_user_master_cgs">db.[id_user_master_cgs] <![CDATA[ <> ]]> #not_id_user_master_cgs#</isNotNull>
				<isNotNull prepend="and" property="flag_stop">db.[flag_stop]=#flag_stop#</isNotNull>
        <isNotNull prepend="and" property="not_flag_stop">db.[flag_stop] <![CDATA[ <> ]]> #not_flag_stop#</isNotNull>
				<isNotNull prepend="and" property="id_gys">db.[id_gys]=#id_gys#</isNotNull>
				<isNotNull prepend="and" property="id_cgs">db.[id_cgs]=#id_cgs#</isNotNull>
				<isNotNull prepend="and" property="alias_gys">db.[alias_gys] like #alias_gys#</isNotNull>
        <isNotNull prepend="and" property="customer_name">db.[alias_cgs] like '%$customer_name$%'</isNotNull>
				<isNotNull prepend="and" property="alias_cgs">db.[alias_cgs]=#alias_cgs#</isNotNull>
				<isNotNull prepend="and" property="id_cgs_level">db.[id_cgs_level]=#id_cgs_level#</isNotNull>
				<isNotNull prepend="and" property="flag_pay">db.[flag_pay]=#flag_pay#</isNotNull>
				<isNotNull prepend="and" property="rq_treaty_start">db.[rq_treaty_start]=#rq_treaty_start#</isNotNull>
				<isNotNull prepend="and" property="start_rq_treaty_start">Datediff(day,#start_rq_treaty_start#,db.[rq_treaty_start]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_treaty_start">Datediff(day,db.[rq_treaty_start],Convert(date,#end_rq_treaty_start#)) > -1</isNotNull>
				<isNotNull prepend="and" property="rq_treaty_end">db.[rq_treaty_end]=#rq_treaty_end#</isNotNull>
				<isNotNull prepend="and" property="start_rq_treaty_end">Datediff(day,#start_rq_treaty_end#,db.[rq_treaty_end]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_treaty_end">Datediff(day,db.[rq_treaty_end],Convert(date,#end_rq_treaty_end#)) > -1</isNotNull>
				<isNotNull prepend="and" property="bm_gys_Interface">db.[bm_gys_Interface]=#bm_gys_Interface#</isNotNull>
				<isNotNull prepend="and" property="bm_cgs_Interface">db.[bm_cgs_Interface]=#bm_cgs_Interface#</isNotNull>
				<isNotNull prepend="and" property="id_user_gys">db.[id_user_gys]=#id_user_gys#</isNotNull>
				<isNotNull prepend="and" property="id_user_cgs">db.[id_user_cgs]=#id_user_cgs#</isNotNull>
				<isNotNull prepend="and" property="flag_from">db.[flag_from]=#flag_from#</isNotNull>
				<isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
				<isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
				<isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
				<isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
				<isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
        <isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
				<isNotNull prepend="and" property="keyword">(db.alias_cgs like #keyword# or db.alias_gys like #keyword# or db.bm_cgs_Interface like #keyword# or db.bm_gys_Interface like #keyword#)</isNotNull>
				<isNotNull property="flag_actived">
					<isEqual compareValue="1" prepend="and" property="flag_actived">EXISTS(SELECT 1 FROM Tb_account WHERE id_user=um.id)</isEqual>
					<isEqual compareValue="0" prepend="and" property="flag_actived">not EXISTS(SELECT 1 FROM Tb_account WHERE id_user=um.id)</isEqual>
				</isNotNull>				
				<isNotNull property="flag_cart">
					<isEqual compareValue="1" prepend="and" property="flag_cart">
						exists(select 1 from Td_sale_cart as cart where cart.id_gys = db.id_gys and  cart.id_cgs = db.id_cgs)
					</isEqual>
				</isNotNull>
        <isNotNull prepend="and" property="id_province">um.[id_province]=#id_province#</isNotNull>
        <isNotNull prepend="and" property="id_city">um.[id_city]=#id_city#</isNotNull>
        <isNotNull prepend="and" property="id_county">um.[id_county]=#id_county#</isNotNull>
        <isNotNull prepend="and" property="not_stop">
          NOT(db.flag_stop=1 AND isnull(account.id_user,0) >0)
        </isNotNull>
      </dynamic>
		</sql>

		<sql id="Order">
			<dynamic prepend="order by">
				<isNull property="sort">db.[id_user_master_gys] asc,db.[id_user_master_cgs] asc</isNull>
				<isNotNull property="sort">
					db.$sort$
					<isNotNull property="dir">
						<isEqual compareValue="asc" property="dir">asc</isEqual>
						<isEqual compareValue="desc" property="dir">desc</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Set">
			<dynamic prepend="set">
				<isNotNull prepend="," property="new_flag_stop">db.[flag_stop]=#new_flag_stop#</isNotNull>
				<isNotNull prepend="," property="new_alias_gys">db.[alias_gys]=#new_alias_gys#</isNotNull>
				<isNotNull prepend="," property="new_alias_cgs">db.[alias_cgs]=#new_alias_cgs#</isNotNull>
				<isNotNull prepend="," property="new_id_cgs_level">db.[id_cgs_level]=#new_id_cgs_level#</isNotNull>
				<isNotNull prepend="," property="new_flag_pay">db.[flag_pay]=#new_flag_pay#</isNotNull>
				<isNotNull prepend="," property="new_rq_treaty_start">db.[rq_treaty_start]=#new_rq_treaty_start#</isNotNull>
				<isNotNull prepend="," property="new_rq_treaty_end">db.[rq_treaty_end]=#new_rq_treaty_end#</isNotNull>
				<isNotNull prepend="," property="new_bm_gys_Interface">db.[bm_gys_Interface]=#new_bm_gys_Interface#</isNotNull>
				<isNotNull prepend="," property="new_bm_cgs_Interface">db.[bm_cgs_Interface]=#new_bm_cgs_Interface#</isNotNull>
				<isNotNull prepend="," property="new_id_user_gys">db.[id_user_gys]=#new_id_user_gys#</isNotNull>
				<isNotNull prepend="," property="new_id_user_cgs">db.[id_user_cgs]=#new_id_user_cgs#</isNotNull>
				<isNotNull prepend="," property="new_flag_from">db.[flag_from]=#new_flag_from#</isNotNull>
				<isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
				<isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
				<isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
				<isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
			</dynamic>
		</sql>

		<sql id="RowBetween">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="start">
					t.rownumber between (#start# + 1)
					<isNotNull prepend="and" property="limit">
						(#start# + #limit#)
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Table">
			<isNotNull property="database">[$database$]..</isNotNull>[Tb_gys_cgs]
		</sql>

		<sql id="NoLock">
			set transaction isolation level read uncommitted
		</sql>

		<delete id="Delete" parameterClass="System.Collections.IDictionary">
			set nocount on
			delete db from <include refid="Table"/> as db <include refid="Where"/>
		</delete>

		<update id="UpdatePart" parameterClass="System.Collections.IDictionary">
			set nocount on
			update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
		</update>

		<select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs_Query">
			set nocount on
			<include refid="NoLock" />
			select db.[id_user_master_gys],db.[id_user_master_cgs],db.id_gys,db.id_cgs,db.[flag_stop],db.[alias_gys],db.[alias_cgs],db.[id_cgs_level],db.[flag_pay],db.[rq_treaty_start],db.[rq_treaty_end],db.[bm_gys_Interface],db.[bm_cgs_Interface],db.[id_user_gys],db.[id_user_cgs],db.[flag_from],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit] from <include refid="Table"/> as db
			<include refid="Where"/>
			<include refid="Order"/>
		</select>

		<sql id="Query1">
			<dynamic prepend="order by">
				<isNull property="sort">db.[rq_create] desc,db.[id_user_master_gys] asc,db.[id_user_master_cgs] asc</isNull>
				<isNotNull property="sort">
					$sort$
					<isNotNull property="dir">
						<isEqual compareValue="asc" property="dir">asc</isEqual>
						<isEqual compareValue="desc" property="dir">desc</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs_Query">
			set nocount on
			<include refid="NoLock" />
			select t.* from (select row_number() over(<include refid="Query1" />) as rownumber,
      cgs.id,isnull(db.alias_cgs,um.companyname) as companyname,um.username,province.name as name_province,city.name as name_city,
      county.name as name_county,lev.name as name_cgs_level,um.name,um.phone,
      (CASE ISnull(account.id_user,0) WHEN 0 THEN 0 ELSE 1 END) as flag_actived,db.flag_stop,cgs.name_bank, cgs.account_bank, cgs.khr, cgs.no_tax, cgs.title_invoice,
      db.bm_gys_Interface as bm_Interface,db.id_user_master_cgs
      from <include refid="Table"/> as db
      left join Tb_cgs as cgs on cgs.id_user_master = db.id_user_master_cgs
      left join Tb_gys as gys on gys.id_user_master = db.id_user_master_gys
      left join Tb_user as um on um.id = db.id_user_master_cgs
      left join Tb_Districts as province on province.id = um.id_province
      left join Tb_Districts as city on city.id = um.id_city
      left join Tb_Districts as county on county.id = um.id_county
      left join Tb_cgs_level as lev on lev.id = db.id_cgs_level
      LEFT JOIN  (SELECT id_user FROM Tb_account GROUP BY id_user)account ON account.id_user=um.id
      <include refid="Where"/>) as t
			<include refid="RowBetween" />
		</select>

		<select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
			<include refid="Where"/>
		</select>

		<select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs">
			set nocount on
			<include refid="NoLock" />
      select db.[id_user_master_gys],db.[id_user_master_cgs],db.id_gys,db.id_cgs,db.[flag_stop],db.[alias_gys],db.[alias_cgs],db.[id_cgs_level],db.[flag_pay],db.[rq_treaty_start],db.[rq_treaty_end],db.[bm_gys_Interface],db.[bm_cgs_Interface],db.[id_user_gys],db.[id_user_cgs],db.[flag_from],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit]
      ,ugys.companyname mc_gys,ucgs.companyname mc_cgs 
      from <include refid="Table"/> as db
      left join tb_user ugys on db.id_user_master_gys=ugys.id
      left join tb_user ucgs on db.id_user_master_cgs=ucgs.id
      <include refid="Where"/>
		</select>

		<select id="QueryCount" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
      left join Tb_user as um on um.id = db.id_user_master_cgs
      LEFT JOIN  (SELECT id_user FROM Tb_account GROUP BY id_user)account ON account.id_user=um.id
      <include refid="Where"/>
		</select>

		<sql id="WhereOfBuyer">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="id_user_master_cgs">db.id_user_master_cgs=#id_user_master_cgs#</isNotNull>
				<isNotNull prepend="and" property="flag_stop">db.flag_stop=#flag_stop#</isNotNull>
				<isNotNull prepend="and" property="keyword">(db.bm_cgs_Interface like #keyword# or db.alias_gys like #keyword#)</isNotNull>
			</dynamic>
		</sql>

		<select id="QueryPageOfBuyer" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs_Query">
			set nocount on
			<include refid="NoLock" />
			select t.* from (select row_number() over(<include refid="Query1" />) as rownumber,
			gys.id as id,db.alias_gys as companyname,um.username,province.name as name_province,city.name as name_city,
			county.name as name_county,um.name,um.phone,db.flag_stop,
			db.bm_cgs_Interface as bm_Interface
			from <include refid="Table"/> as db
      left join Tb_gys as gys on gys.id_user_master = db.id_user_master_gys
      left join Tb_user as um on um.id = db.id_user_master_gys
      left join Tb_Districts as province on province.id = um.id_province
      left join Tb_Districts as city on city.id = um.id_city
      left join Tb_Districts as county on county.id = um.id_county
      <include refid="WhereOfBuyer"/>) as t
			<include refid="RowBetween" />
		</select>

		<select id="QueryCountOfBuyer" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
			<include refid="WhereOfBuyer"/>
		</select>

		<select id="QueryListOfBuyer" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs_Query">
			set nocount on
			<include refid="NoLock" />
      select db.id_gys as id,case isnull(db.alias_gys,'') when '' then um.companyname else db.alias_gys end as companyname,province.name as name_province,city.name as name_city,
      county.name as name_county,um.name,um.phone,db.[flag_stop],
      db.bm_cgs_Interface as bm_Interface
      from <include refid="Table"/> as db
      left join Tb_user as um on um.id = db.id_user_master_gys
      left join Tb_Districts as province on province.id = um.id_province
      left join Tb_Districts as city on city.id = um.id_city
      left join Tb_Districts as county on county.id = um.id_county
      <include refid="Where"/>
			<include refid="Order"/>
		</select>
		
		<select id="QueryListOfSupplier" parameterClass="System.Collections.IDictionary" resultClass="Tb_Gys_Cgs_Query">
			set nocount on
			<include refid="NoLock" />
      select db.id_cgs as id,db.id_user_master_cgs,db.alias_cgs as companyname,um.username,province.name as name_province,city.name as name_city,
      county.name as name_county,lev.name as name_cgs_level,um.name,um.phone,
      (CASE ISnull(account.id_user,0) WHEN 0 THEN 0 ELSE 1 END) as flag_actived,khly.mc as name_flag_from,db.flag_stop,
      db.bm_gys_Interface
      from <include refid="Table"/> as db
      left join Tb_cgs as cgs on cgs.id_user_master = db.id_user_master_cgs
      left join Tb_user as um on um.id = db.id_user_master_cgs
      left join Tb_Districts as province on province.id = um.id_province
      left join Tb_Districts as city on city.id = um.id_city
      left join Tb_Districts as county on county.id = um.id_county
      left join Tb_cgs_level as lev on lev.id = db.id_cgs_level
      left join Ts_flag as khly on khly.bs_lx = 'khly' and khly.bm = db.flag_from
      LEFT JOIN  (SELECT id_user FROM Tb_account GROUP BY id_user)account ON account.id_user=um.id
      <include refid="Where"/>
			<include refid="Order"/>
		</select>

	</statements>
</sqlMap>