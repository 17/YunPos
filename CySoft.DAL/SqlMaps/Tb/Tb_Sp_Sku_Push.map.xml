<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Sp_Sku_Push"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Sp_Sku_Push" type="CySoft.Model.Tb.Tb_Sp_Sku_Push,CySoft.Model" />
    <typeAlias alias="SpSkuPushData" type="CySoft.Model.Other.SpSkuPushData,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id_sku_List">
          db.[id_sku] in <iterate property="id_sku_List" conjunction="," open="(" close=")">#id_sku_List[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id_gys_List">
          db.[id_gys] in <iterate property="id_gys_List" conjunction="," open="(" close=")">#id_gys_List[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="id_gys_push">db.[id_gys_push]=#id_gys_push#</isNotNull>
        <isNotNull prepend="and" property="id_gys">db.[id_gys]=#id_gys#</isNotNull>
        <isNotNull prepend="and" property="id_sku">db.[id_sku]=#id_sku#</isNotNull>
        <isNotNull prepend="and" property="pushreason">db.[pushreason]=#pushreason#</isNotNull>
        <isNotNull prepend="and" property="refusereason">db.[refusereason]=#refusereason#</isNotNull>
        <isNotNull prepend="and" property="bm_Interface">db.[bm_Interface]=#bm_Interface#</isNotNull>
        <isNotNull prepend="and" property="id_spfl">db.[id_spfl]=#id_spfl#</isNotNull>
        <isNotNull prepend="and" property="sl_dh_min">db.[sl_dh_min]=#sl_dh_min#</isNotNull>
        <isNotNull prepend="and" property="dj_dh">db.[dj_dh]=#dj_dh#</isNotNull>
        <isNotNull prepend="and" property="id_sh">db.[id_sh]=#id_sh#</isNotNull>
        <isNotNull prepend="and" property="rq_sh">db.[rq_sh]=#rq_sh#</isNotNull>
        <isNotNull prepend="and" property="start_rq_sh">Datediff(day,#start_rq_sh#,db.[rq_sh]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_sh">Datediff(day,db.[rq_sh],Convert(date,#end_rq_sh#)) > -1</isNotNull>
        <isNotNull prepend="and" property="falg_state">db.[falg_state]=#falg_state#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_gys_push">db.[id_gys_push]=#new_id_gys_push#</isNotNull>
        <isNotNull prepend="," property="new_id_gys">db.[id_gys]=#new_id_gys#</isNotNull>
        <isNotNull prepend="," property="new_id_sku">db.[id_sku]=#new_id_sku#</isNotNull>
        <isNotNull prepend="," property="new_pushreason">db.[pushreason]=#new_pushreason#</isNotNull>
        <isNotNull prepend="," property="new_refusereason">db.[refusereason]=#new_refusereason#</isNotNull>
        <isNotNull prepend="," property="new_bm_Interface">db.[bm_Interface]=#new_bm_Interface#</isNotNull>
        <isNotNull prepend="," property="new_id_spfl">db.[id_spfl]=#new_id_spfl#</isNotNull>
        <isNotNull prepend="," property="new_sl_dh_min">db.[sl_dh_min]=#new_sl_dh_min#</isNotNull>
        <isNotNull prepend="," property="new_dj_dh">db.[dj_dh]=#new_dj_dh#</isNotNull>
        <isNotNull prepend="," property="new_id_sh">db.[id_sh]=#new_id_sh#</isNotNull>
        <isNotNull prepend="," property="new_rq_sh">db.[rq_sh]=#new_rq_sh#</isNotNull>
        <isNotNull prepend="," property="new_falg_state">db.[falg_state]=#new_falg_state#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[tb_sp_sku_push]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Sp_Sku_Push">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[id_gys_push],db.[id_gys],db.[id_sku],db.[pushreason],db.[refusereason],db.[bm_Interface],db.[id_spfl],db.[sl_dh_min],db.[dj_dh],db.[id_sh],db.[rq_sh],db.[falg_state],db.[rq_create] from <include refid="Table"/> as db
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="SpSkuPushData">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.*,
      tgs.id_sp,tgs.dj_base,tgs.zhl,tgs.sl_kc,tgs.sl_kc_bj,
      sku.photo_min,sku.photo_min2,
      (case isnull(tgs.bm_Interface,'') when '' then sku.bm else tgs.bm_Interface end) as bm,
      sku.unit,fl.name as name_fl,sp.mc as name_sp,sp.id_gys_create,

      tgs.dj_base as dj,tu.companyname from <include refid="Table"/> as db 
      left join Tb_gys_sp tgs on db.id_gys_push=tgs.id_gys and db.id_sku=tgs.id_sku
      left join Tb_sp_sku sku on sku.id=tgs.id_sku
      left join Tb_sp sp on sp.id=sku.id_sp
      left join Tb_spfl fl on fl.id=tgs.id_spfl
      left join tb_gys tg on tg.id=db.id_gys_push
      left join tb_user tu on tu.id=tg.id_user_master <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="QueryCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      left join Tb_gys_sp tgs on db.id_gys_push=tgs.id_gys and db.id_sku=tgs.id_sku
      left join Tb_sp_sku sku on sku.id=tgs.id_sku
      left join Tb_sp sp on sp.id=sku.id_sp
      left join Tb_spfl fl on fl.id=tgs.id_spfl
      left join tb_gys tg on tg.id=db.id_gys_push
      left join tb_user tu on tu.id=tg.id_user_master
      <include refid="Where"/>
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="SpSkuPushData">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[id_gys_push],db.[id_gys],db.[id_sku],db.[pushreason],db.[refusereason],db.[bm_Interface],db.[id_spfl],db.[sl_dh_min],db.[dj_dh],db.[id_sh],db.[rq_sh],db.[falg_state],db.[rq_create],tgs.id_sp,tgs.zhl from <include refid="Table"/> as db
      LEFT JOIN tb_gys_sp tgs ON db.id_gys_push=tgs.id_gys AND db.id_sku=tgs.id_sku
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

