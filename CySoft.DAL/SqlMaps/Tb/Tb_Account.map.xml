<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Account"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Tb_Account" type="CySoft.Model.Tb.Tb_Account,CySoft.Model" />
    <typeAlias alias="Tb_User" type="CySoft.Model.Tb.Tb_User,CySoft.Model" />
	</alias>
	<statements>
		<sql id="Where">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="idList">
					db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
				</isNotNull>
				<isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
				<isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
				<isNotNull prepend="and" property="flag_lx">db.[flag_lx]=#flag_lx#</isNotNull>
				<isNotNull prepend="and" property="username">db.[username]=#username#</isNotNull>
				<isNotNull prepend="and" property="id_user">db.[id_user]=#id_user#</isNotNull>
        <isNotNull prepend="and" property="parent_name">
          id_masteruser in
          (select id_user from  dbo.tb_account
          where username=#parent_name#)
        </isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
				<isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
				<isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
				<isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>       
			</dynamic>
		</sql>

		<sql id="Order">
			<dynamic prepend="order by">
				<isNull property="sort">db.[id] asc</isNull>
				<isNotNull property="sort">
					db.$sort$
					<isNotNull property="dir">
						<isEqual compareValue="asc" property="dir">asc</isEqual>
						<isEqual compareValue="desc" property="dir">desc</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Set">
			<dynamic prepend="set">
				<isNotNull prepend="," property="new_flag_lx">db.[flag_lx]=#new_flag_lx#</isNotNull>
				<isNotNull prepend="," property="new_username">db.[username]=#new_username#</isNotNull>
				<isNotNull prepend="," property="new_id_user">db.[id_user]=#new_id_user#</isNotNull>
				<isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
				<isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
			</dynamic>
		</sql>

		<sql id="RowBetween">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="start">
					t.rownumber between (#start# + 1)
					<isNotNull prepend="and" property="limit">
						(#start# + #limit#)
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Table">
			<isNotNull property="database">[$database$]..</isNotNull>[Tb_account]
		</sql>

		<sql id="NoLock">
			set transaction isolation level read uncommitted
		</sql>

		<delete id="Delete" parameterClass="System.Collections.IDictionary">
			set nocount on
			delete db from <include refid="Table"/> as db <include refid="Where"/>
		</delete>

		<update id="UpdatePart" parameterClass="System.Collections.IDictionary">
			set nocount on
			update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
		</update>

		<select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Account">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[flag_lx],db.[username],db.[id_user],db.[id_edit],db.[rq_edit],db.[id_masteruser] from <include refid="Table"/> as db
			<include refid="Where"/>
			<include refid="Order"/>
		</select>

		<select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Account">
			set nocount on
			<include refid="NoLock" />
			select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
			<include refid="RowBetween" />
		</select>

		<select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
			<include refid="Where"/>
		</select>

		<select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Account">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[flag_lx],db.[username],db.[id_user],db.[id_edit],db.[rq_edit],db.[id_masteruser] from <include refid="Table"/> as db
			<include refid="Where"/>
		</select>    
    
	</statements>
</sqlMap>