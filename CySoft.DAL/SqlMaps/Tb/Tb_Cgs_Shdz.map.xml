<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Cgs_Shdz"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<alias>
		<typeAlias alias="Tb_Cgs_Shdz" type="CySoft.Model.Tb.Tb_Cgs_Shdz,CySoft.Model" />
    <typeAlias alias="Tb_Cgs_Shdz_Query" type="CySoft.Model.Tb.Tb_Cgs_Shdz_Query,CySoft.Model" />
	</alias>
	<statements>
		<sql id="Where">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="idList">
					db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
				</isNotNull>
				<isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
				<isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
				<isNotNull prepend="and" property="id_cgs">db.[id_cgs]=#id_cgs#</isNotNull>
				<isNotNull prepend="and" property="flag_default">db.[flag_default]=#flag_default#</isNotNull>
				<isNotNull prepend="and" property="shr">db.[shr]=#shr#</isNotNull>
				<isNotNull prepend="and" property="phone">db.[phone]=#phone#</isNotNull>
				<isNotNull prepend="and" property="tel">db.[tel]=#tel#</isNotNull>
				<isNotNull prepend="and" property="id_province">db.[id_province]=#id_province#</isNotNull>
				<isNotNull prepend="and" property="id_city">db.[id_city]=#id_city#</isNotNull>
				<isNotNull prepend="and" property="id_county">db.[id_county]=#id_county#</isNotNull>
				<isNotNull prepend="and" property="zipcode">db.[zipcode]=#zipcode#</isNotNull>
				<isNotNull prepend="and" property="address">db.[address]=#address#</isNotNull>
				<isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
				<isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
				<isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
				<isNotNull prepend="and" property="id_edit">db.[id_edit]=#id_edit#</isNotNull>
				<isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
				<isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
				<isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="id_gys">EXISTS(SELECT 1 FROM Tb_gys_cgs WHERE flag_stop=0 and id_cgs=db.id_cgs AND id_gys=#id_gys#)</isNotNull>
			</dynamic>
		</sql>

		<sql id="Order">
			<dynamic prepend="order by">
				<isNull property="sort">db.[id] asc</isNull>
				<isNotNull property="sort">
					db.$sort$
					<isNotNull property="dir">
						<isEqual compareValue="asc" property="dir">asc</isEqual>
						<isEqual compareValue="desc" property="dir">desc</isEqual>
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Set">
			<dynamic prepend="set">
				<isNotNull prepend="," property="new_id_cgs">db.[id_cgs]=#new_id_cgs#</isNotNull>
				<isNotNull prepend="," property="new_flag_default">db.[flag_default]=#new_flag_default#</isNotNull>
				<isNotNull prepend="," property="new_shr">db.[shr]=#new_shr#</isNotNull>
				<isNotNull prepend="," property="new_phone">db.[phone]=#new_phone#</isNotNull>
				<isNotNull prepend="," property="new_tel">db.[tel]=#new_tel#</isNotNull>
				<isNotNull prepend="," property="new_id_province">db.[id_province]=#new_id_province#</isNotNull>
				<isNotNull prepend="," property="new_id_city">db.[id_city]=#new_id_city#</isNotNull>
				<isNotNull prepend="," property="new_id_county">db.[id_county]=#new_id_county#</isNotNull>
				<isNotNull prepend="," property="new_zipcode">db.[zipcode]=#new_zipcode#</isNotNull>
				<isNotNull prepend="," property="new_address">db.[address]=#new_address#</isNotNull>
				<isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
				<isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
				<isNotNull prepend="," property="new_id_edit">db.[id_edit]=#new_id_edit#</isNotNull>
				<isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
			</dynamic>
		</sql>

		<sql id="RowBetween">
			<dynamic prepend="where">
				<isNotNull prepend="and" property="start">
					t.rownumber between (#start# + 1)
					<isNotNull prepend="and" property="limit">
						(#start# + #limit#)
					</isNotNull>
				</isNotNull>
			</dynamic>
		</sql>

		<sql id="Table">
			<isNotNull property="database">[$database$]..</isNotNull>[Tb_cgs_shdz]
		</sql>

		<sql id="NoLock">
			set transaction isolation level read uncommitted
		</sql>

		<delete id="Delete" parameterClass="System.Collections.IDictionary">
			set nocount on
			delete db from <include refid="Table"/> as db <include refid="Where"/>
		</delete>

		<update id="UpdatePart" parameterClass="System.Collections.IDictionary">
			set nocount on
			update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
		</update>

		<select id="GetNextXh" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			select (isnull(max(db.xh),0)+1) value from <include refid="Table"/> as db <include refid="Where"/>
		</select>

		<select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs_Shdz_Query">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[id_cgs],db.[flag_default],db.[shr],db.[phone],db.[tel],db.[id_province],db.[id_city],db.[id_county],db.[zipcode],db.[address],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit]
      ,p.name as province_name
      ,c.name as city_name
      ,co.name as county_name
      from <include refid="Table"/> as db
      left join Tb_Districts p on p.id=db.id_province
      left join Tb_Districts c on c.id=db.id_city
      left join Tb_Districts co on co.id=db.id_county
      <include refid="Where"/>
			<include refid="Order"/>
		</select>

		<select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs_Shdz">
			set nocount on
			<include refid="NoLock" />
			select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
			<include refid="RowBetween" />
		</select>

		<select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
			set nocount on
			<include refid="NoLock" />
			select count(1) as value from <include refid="Table"/> as db
			<include refid="Where"/>
		</select>

		<select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Cgs_Shdz_Query">
			set nocount on
			<include refid="NoLock" />
      select db.[id],db.[id_cgs],db.[flag_default],db.[shr],db.[phone],db.[tel],db.[id_province],db.[id_city],db.[id_county],db.[zipcode],db.[address],db.[id_create],db.[rq_create],db.[id_edit],db.[rq_edit]
      ,p.name as province_name
      ,c.name as city_name
      ,co.name as county_name
      from <include refid="Table"/> as db
      left join Tb_Districts p on p.id=db.id_province
      left join Tb_Districts c on c.id=db.id_city
      left join Tb_Districts co on co.id=db.id_county
      <include refid="Where"/>
		</select>

	</statements>
</sqlMap>