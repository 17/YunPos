<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Hy_Shop"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Hy_Shop" type="CySoft.Model.Tb.Tb_Hy_Shop,CySoft.Model" />
    <typeAlias alias="Tb_Hy_Shop_Query" type="CySoft.Model.Tb.Tb_Hy_Shop_Query,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
        <isNotNull prepend="and" property="id_shop">db.[id_shop]=#id_shop#</isNotNull>
        <isNotNull prepend="and" property="id_hy">db.[id_hy]=#id_hy#</isNotNull>
        <isNotNull prepend="and" property="membercard">db.[membercard]=#membercard#</isNotNull>
        <isNotNull prepend="and" property="phone">db.[phone]=#phone#</isNotNull>
        <isNotNull prepend="and" property="id_hyfl">db.[id_hyfl]=#id_hyfl#</isNotNull>
        <isNotNull prepend="and" property="flag_yhlx">db.[flag_yhlx]=#flag_yhlx#</isNotNull>
        <isNotNull prepend="and" property="zk">db.[zk]=#zk#</isNotNull>
        <isNotNull prepend="and" property="rq_b">db.[rq_b]=#rq_b#</isNotNull>
        <isNotNull prepend="and" property="start_rq_b">Datediff(day,#start_rq_b#,db.[rq_b]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_b">Datediff(day,db.[rq_b],Convert(date,#end_rq_b#)) > -1</isNotNull>
        <isNotNull prepend="and" property="rq_e">db.[rq_e]=#rq_e#</isNotNull>
        <isNotNull prepend="and" property="start_rq_e">Datediff(day,#start_rq_e#,db.[rq_e]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_e">Datediff(day,db.[rq_e],Convert(date,#end_rq_e#)) > -1</isNotNull>
        <isNotNull prepend="and" property="flag_stop">db.[flag_stop]=#flag_stop#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="hy_flag_delete">hy.flag_delete=#hy_flag_delete#</isNotNull>

        <isNotNull prepend="and" property="keyword">
          ( hy.name like #keyword#  or db.phone like #keyword# or hy.tel like #keyword# or db.membercard like #keyword# )
        </isNotNull>
        
        
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
        <isNotNull prepend="," property="new_id_shop">db.[id_shop]=#new_id_shop#</isNotNull>
        <isNotNull prepend="," property="new_id_hy">db.[id_hy]=#new_id_hy#</isNotNull>
        <isNotNull prepend="," property="new_membercard">db.[membercard]=#new_membercard#</isNotNull>
        <isNotNull prepend="," property="new_phone">db.[phone]=#new_phone#</isNotNull>
        <isNotNull prepend="," property="new_id_hyfl">db.[id_hyfl]=#new_id_hyfl#</isNotNull>
        <isNotNull prepend="," property="new_flag_yhlx">db.[flag_yhlx]=#new_flag_yhlx#</isNotNull>
        <isNotNull prepend="," property="new_zk">db.[zk]=#new_zk#</isNotNull>
        <isNotNull prepend="," property="new_rq_b">db.[rq_b]=#new_rq_b#</isNotNull>
        <isNotNull prepend="," property="new_rq_e">db.[rq_e]=#new_rq_e#</isNotNull>
        <isNotNull prepend="," property="new_flag_stop">db.[flag_stop]=#new_flag_stop#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[tb_hy_shop]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Shop">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_shop],db.[id_hy],db.[membercard],db.[phone],db.[id_hyfl],db.[flag_yhlx],db.[zk],db.[rq_b],db.[rq_e],db.[flag_stop],db.[rq_create]
      ,hy.name hy_name
      ,hy.qq hy_qq
      ,hy.email hy_email
      ,hy.tel hy_tel
      ,hy.address hy_address
      ,hy.MMno hy_MMno
      ,hy.zipcode hy_zipcode
      ,hy.birthday hy_birthday
      ,hy.hysr hy_hysr
      ,''  hy_hysr_cn
      ,hy.flag_nl hy_flag_nl
      ,hy.id_shop_create hy_id_shop_create
      ,hy.password hy_password
      
      ,hyfl.mc hyfl_mc
      ,hyfl.bm hyfl_bm
      ,hy.flag_sex hy_flag_sex
      from
      <include refid="Table"/> as db

      left join tb_hy hy on db.id_hy=hy.id
      left join tb_hyfl hyfl on db.id_hyfl=hyfl.id


      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Shop_Query">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.*

      ,hy.name hy_name
      ,hy.qq hy_qq
      ,hy.email hy_email
      ,hy.tel hy_tel
      ,hy.address hy_address
      ,hy.MMno hy_MMno
      ,hy.zipcode hy_zipcode
      ,hy.birthday hy_birthday
      ,hy.hysr hy_hysr
      ,''  hy_hysr_cn
      ,hy.flag_nl hy_flag_nl
      ,hy.id_shop_create hy_id_shop_create
      ,hy.password hy_password

      ,hyfl.mc hyfl_mc
      ,hyfl.bm hyfl_bm
      ,hy.flag_sex hy_flag_sex

      ,isnull(je.je_qm,0) je_qm
      ,isnull(je.je_qm_zs,0) je_qm_zs
      <!--,isnull(jf.jf_qm,0) jf_qm-->
      ,isnull((select sum(jf_qm) from tz_hy_jf where id_hy=db.id_hy),0) jf_qm

      from  <include refid="Table"/> as db
      left join tb_hy hy on db.id_hy=hy.id
      left join tb_hyfl hyfl on db.id_hyfl=hyfl.id
      left join tz_hy_je je on je.id_hy=db.id_hy
      
      <!--left join tz_hy_jf jf on jf.id_hy=db.id_hy-->


      <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from 
      <include refid="Table"/> as db
      left join tb_hy hy on db.id_hy=hy.id
      left join tb_hyfl hyfl on db.id_hyfl=hyfl.id
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Shop_Query">

      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_shop],db.[id_hy],db.[membercard],db.[phone],db.[id_hyfl],db.[flag_yhlx],db.[zk],db.[rq_b],db.[rq_e],db.[flag_stop],db.[rq_create]

      ,hy.name hy_name
      ,hy.qq hy_qq
      ,hy.email hy_email
      ,hy.tel hy_tel
      ,hy.address hy_address
      ,hy.MMno hy_MMno
      ,hy.zipcode hy_zipcode
      ,hy.birthday hy_birthday
      ,hy.hysr hy_hysr
      ,''  hy_hysr_cn
      ,hy.flag_nl hy_flag_nl
      ,hy.id_shop_create hy_id_shop_create
      ,hyfl.mc hyfl_mc
      ,hyfl.bm hyfl_bm
      ,hy.flag_sex hy_flag_sex
      ,hy.password hy_password

      ,isnull(je.je_qm,0) je_qm
      ,isnull(je.je_qm_zs,0) je_qm_zs
      ,isnull(jf.jf_qm,0) jf_qm

      from
      <include refid="Table"/> as db
      left join tb_hy hy on db.id_hy=hy.id
      left join tb_hyfl hyfl on db.id_hyfl=hyfl.id

      left join tz_hy_je je on je.id_hy=db.id_hy
      left join tz_hy_jf jf on jf.id_hy=db.id_hy

      <include refid="Where"/>


    </select>

  </statements>
</sqlMap>

