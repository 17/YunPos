<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Tb_Hy_Czrule_Zssp"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Tb_Hy_Czrule_Zssp" type="CySoft.Model.Tb.Tb_Hy_Czrule_Zssp,CySoft.Model" />
    <typeAlias alias="Tb_Hy_Czrule_Zssp_Query" type="CySoft.Model.Tb.Tb_Hy_Czrule_Zssp_Query,CySoft.Model" />
    
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>

        <isNotNull prepend="and" property="id_billList">
          db.[id_bill] in <iterate property="id_billList" conjunction="," open="(" close=")">#id_billList[]#</iterate>
        </isNotNull>
        
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="id_masteruser">db.[id_masteruser]=#id_masteruser#</isNotNull>
        <isNotNull prepend="and" property="id_bill">db.[id_bill]=#id_bill#</isNotNull>
        <isNotNull prepend="and" property="id_sp">db.[id_sp]=#id_sp#</isNotNull>
        <isNotNull prepend="and" property="sl">db.[sl]=#sl#</isNotNull>
        <isNotNull prepend="and" property="id_create">db.[id_create]=#id_create#</isNotNull>
        <isNotNull prepend="and" property="rq_create">db.[rq_create]=#rq_create#</isNotNull>
        <isNotNull prepend="and" property="start_rq_create">Datediff(day,#start_rq_create#,db.[rq_create]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_create">Datediff(day,db.[rq_create],Convert(date,#end_rq_create#)) > -1</isNotNull>
        <isNotNull prepend="and" property="flag_delete">db.[flag_delete]=#flag_delete#</isNotNull>
        <isNotNull prepend="and" property="nlast">db.[nlast]=#nlast#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_masteruser">db.[id_masteruser]=#new_id_masteruser#</isNotNull>
        <isNotNull prepend="," property="new_id_bill">db.[id_bill]=#new_id_bill#</isNotNull>
        <isNotNull prepend="," property="new_id_sp">db.[id_sp]=#new_id_sp#</isNotNull>
        <isNotNull prepend="," property="new_sl">db.[sl]=#new_sl#</isNotNull>
        <isNotNull prepend="," property="new_id_create">db.[id_create]=#new_id_create#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
        <isNotNull prepend="," property="new_flag_delete">db.[flag_delete]=#new_flag_delete#</isNotNull>
        <isNotNull prepend="," property="new_nlast">db.[nlast]=#new_nlast#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[tb_hy_czrule_zssp]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Czrule_Zssp_Query">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_bill],db.[id_sp],db.[sl],db.[id_create],db.[rq_create],db.[flag_delete],db.[nlast]
      ,isnull(sp.mc,'') mc
      ,isnull(sp.bm,'') bm
      ,isnull(sp.dw,'') dw
      from <include refid="Table"/> as db
      left join tb_shopsp sp on sp.id_sp=db.id_sp and sp.id=(select top 1 id from tb_shopsp where id_sp=db.id_sp)

      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Czrule_Zssp">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Tb_Hy_Czrule_Zssp">
      set nocount on
      <include refid="NoLock" />
      select db.[id_masteruser],db.[id],db.[id_bill],db.[id_sp],db.[sl],db.[id_create],db.[rq_create],db.[flag_delete],db.[nlast] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>

