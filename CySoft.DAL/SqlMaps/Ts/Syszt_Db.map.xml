<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Syszt_Db"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="Syszt_Db" type="CySoft.Model.Other.Syszt_Db,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="idList">
          db.[id] in <iterate property="idList" conjunction="," open="(" close=")">#idList[]#</iterate>
        </isNotNull>
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="not_id">db.[id] <![CDATA[ <> ]]> #not_id#</isNotNull>
        <isNotNull prepend="and" property="bm">db.[bm]=#bm#</isNotNull>
        <isNotNull prepend="and" property="db_mc">db.[db_mc]=#db_mc#</isNotNull>
        <isNotNull prepend="and" property="db_yhm">db.[db_yhm]=#db_yhm#</isNotNull>
        <isNotNull prepend="and" property="db_mm">db.[db_mm]=#db_mm#</isNotNull>
        <isNotNull prepend="and" property="db_port">db.[db_port]=#db_port#</isNotNull>
        <isNotNull prepend="and" property="rq">db.[rq]=#rq#</isNotNull>
        <isNotNull prepend="and" property="start_rq">Datediff(day,#start_rq#,db.[rq]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq">Datediff(day,db.[rq],Convert(date,#end_rq#)) > -1</isNotNull>
        <isNotNull prepend="and" property="xh">db.[xh]=#xh#</isNotNull>
        <isNotNull prepend="and" property="db_from">db.[db_from]=#db_from#</isNotNull>
        <isNotNull prepend="and" property="rq_edit">db.[rq_edit]=#rq_edit#</isNotNull>
        <isNotNull prepend="and" property="start_rq_edit">Datediff(day,#start_rq_edit#,db.[rq_edit]) > -1</isNotNull>
        <isNotNull prepend="and" property="end_rq_edit">Datediff(day,db.[rq_edit],Convert(date,#end_rq_edit#)) > -1</isNotNull>
        <isNotNull prepend="and" property="db_title">db.[db_title]=#db_title#</isNotNull>
        <isNotNull prepend="and" property="upgrade_url">db.[upgrade_url]=#upgrade_url#</isNotNull>
        <isNotNull prepend="and" property="upgrade_allowkey">db.[upgrade_allowkey]=#upgrade_allowkey#</isNotNull>
        <isNotNull prepend="and" property="db_flag">db.[db_flag]=#db_flag#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_bm">db.[bm]=#new_bm#</isNotNull>
        <isNotNull prepend="," property="new_db_mc">db.[db_mc]=#new_db_mc#</isNotNull>
        <isNotNull prepend="," property="new_db_yhm">db.[db_yhm]=#new_db_yhm#</isNotNull>
        <isNotNull prepend="," property="new_db_mm">db.[db_mm]=#new_db_mm#</isNotNull>
        <isNotNull prepend="," property="new_db_port">db.[db_port]=#new_db_port#</isNotNull>
        <isNotNull prepend="," property="new_rq">db.[rq]=#new_rq#</isNotNull>
        <isNotNull prepend="," property="new_db_from">db.[db_from]=#new_db_from#</isNotNull>
        <isNotNull prepend="," property="new_rq_edit">db.[rq_edit]=#new_rq_edit#</isNotNull>
        <isNotNull prepend="," property="new_db_title">db.[db_title]=#new_db_title#</isNotNull>
        <isNotNull prepend="," property="new_upgrade_url">db.[upgrade_url]=#new_upgrade_url#</isNotNull>
        <isNotNull prepend="," property="new_upgrade_allowkey">db.[upgrade_allowkey]=#new_upgrade_allowkey#</isNotNull>
        <isNotNull prepend="," property="new_db_flag">db.[db_flag]=#new_db_flag#</isNotNull>
      </dynamic>
    </sql>

    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[syszt_db]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="GetNextXh" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      select (isnull(max(db.xh),0)+1) value from <include refid="Table"/> as db <include refid="Where"/>
    </select>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="Syszt_Db">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[bm],db.[db_mc],db.[db_yhm],db.[db_mm],db.[db_port],db.[rq],db.[xh],db.[db_from],db.[rq_edit],db.[db_title],db.[upgrade_url],db.[upgrade_allowkey],db.[db_flag] from <include refid="Table"/> as db
      <include refid="Where"/>
      <include refid="Order"/>
    </select>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="Syszt_Db">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="Syszt_Db">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[bm],db.[db_mc],db.[db_yhm],db.[db_mm],db.[db_port],db.[rq],db.[xh],db.[db_from],db.[rq_edit],db.[db_title],db.[upgrade_url],db.[upgrade_allowkey],db.[db_flag] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

  </statements>
</sqlMap>
