<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="YeePay_City"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="YeePay_City" type="CySoft.Model.Pay.YeePay_City,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="bm_province">db.[bm_province]= #bm_province#</isNotNull>
        <isNotNull prepend="and" property="bm_city">db.[bm_city]= #bm_city#</isNotNull>
        <isNotNull prepend="and" property="province">db.[province]= #province#</isNotNull>
        <isNotNull prepend="and" property="city">db.[city]= #city#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_bm_province">db.[bm_province]=#new_bm_province#</isNotNull>
        <isNotNull prepend="," property="new_bm_city">db.[bm_city]=#new_bm_city#</isNotNull>
        <isNotNull prepend="," property="new_province">db.[province]=#new_province#</isNotNull>
        <isNotNull prepend="," property="new_city">db.[city]=#new_city#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[id] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[YeePay_City]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>


    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="YeePay_City">
      set nocount on
      <include refid="NoLock" />
      select db.*  from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="QueryList" parameterClass="System.Collections.IDictionary" resultClass="YeePay_City">
      set nocount on
      <include refid="NoLock" />
      select 
      <isNotNull property="province_select">DISTINCT db.[province],db.[bm_province]</isNotNull>
      <isNotNull property="city_select">DISTINCT db.[city],db.[bm_city]</isNotNull>
      from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>
  </statements>
</sqlMap>