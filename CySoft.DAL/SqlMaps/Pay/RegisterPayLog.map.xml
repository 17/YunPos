<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="RegisterPay"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="RegisterPayLog" type="CySoft.Model.Pay.RegisterPayLog,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="id">db.[id]=#id#</isNotNull>
        <isNotNull prepend="and" property="ledgerno">db.[ledgerno]=#ledgerno#</isNotNull>
        <isNotNull prepend="and" property="id_user_master">db.[id_user_master]= #id_user_master#</isNotNull>
        <isNotNull prepend="and" property="type_action">db.[type_action]= #type_action#</isNotNull>
        <isNotNull prepend="and" property="flag_action">db.[flag_action]= #flag_action#</isNotNull>
        <isNotNull prepend="and" property="bm_error">db.[bm_error]= #bm_error#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_id_user_master">db.[id_user_master]=#new_id_user_master#</isNotNull>
        <isNotNull prepend="," property="new_type_action">db.[type_action]=#new_type_action#</isNotNull>
        <isNotNull prepend="," property="new_flag_action">db.[flag_action]=#new_flag_action#</isNotNull>
        <isNotNull prepend="," property="new_des_action">db.[des_action]=#new_des_action#</isNotNull>
        <isNotNull prepend="," property="new_bm_error">db.[bm_error]=#new_bm_error#</isNotNull>
        <isNotNull prepend="," property="new_msg_error">db.[msg_error]=#new_msg_error#</isNotNull>
        <isNotNull prepend="," property="new_rq_create">db.[rq_create]=#new_rq_create#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[RegisterPayLog]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>

    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db <include refid="Set"/> from <include refid="Table"/> as db <include refid="Where"/>
    </update>

    <select id="GetNextKey" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      select (isnull(max(db.id),0)+1) as value from <include refid="Table"/> as db <include refid="Where"/>
    </select>

    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="RegisterPayLog">
      set nocount on
      <include refid="NoLock" />
      select db.[id],db.[ledgerno],db.[id_user_master],db.[type_action],db.[flag_action],db.[des_action],db.[bm_error],db.[msg_error],db.[rq_create] from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>
  </statements>
</sqlMap>