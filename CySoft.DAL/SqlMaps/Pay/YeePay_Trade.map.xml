<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="YeePay_Trade"  xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <alias>
    <typeAlias alias="YeePay_Trade" type="CySoft.Model.Pay.YeePay_Trade,CySoft.Model" />
  </alias>
  <statements>
    <sql id="Where">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="ledgerno">db.[ledgerno]=#ledgerno#</isNotNull>
        <isNotNull prepend="and" property="id_user_master">db.[id_user_master]= #id_user_master#</isNotNull>
        <isNotNull prepend="and" property="flag_trade">db.[flag_trade]= #flag_trade#</isNotNull>
        <isNotNull prepend="and" property="flag_state">db.[flag_state]= #flag_state#</isNotNull>
        <isNotNull prepend="and" property="id_user">db.[id_user]= #id_user#</isNotNull>
        <isNotNull prepend="and" property="tradeid">db.[tradeid]= #tradeid#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Set">
      <dynamic prepend="set">
        <isNotNull prepend="," property="new_flag_trade">db.[flag_trade]=#new_flag_trade#</isNotNull>
        <isNotNull prepend="," property="new_rq_trade">db.[rq_trade]=#new_rq_trade#</isNotNull>
        <isNotNull prepend="," property="new_tradeid">db.[tradeid]=#new_tradeid#</isNotNull>
        <isNotNull prepend="," property="new_je_trade">db.[je_trade]=#new_je_trade#</isNotNull>
        <isNotNull prepend="," property="new_flag_state">db.[flag_state]=#new_flag_state#</isNotNull>
        <isNotNull prepend="," property="new_id_user">db.[id_user]=#new_id_user#</isNotNull>
      </dynamic>
    </sql>

    <sql id="Table">
      <isNotNull property="database">[$database$]..</isNotNull>[YeePay_Trade]
    </sql>

    <sql id="NoLock">
      set transaction isolation level read uncommitted
    </sql>
    
    <sql id="RowBetween">
      <dynamic prepend="where">
        <isNotNull prepend="and" property="start">
          t.rownumber between (#start# + 1)
          <isNotNull prepend="and" property="limit">
            (#start# + #limit#)
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>
    <sql id="Order">
      <dynamic prepend="order by">
        <isNull property="sort">db.[dh] asc</isNull>
        <isNotNull property="sort">
          db.$sort$
          <isNotNull property="dir">
            <isEqual compareValue="asc" property="dir">asc</isEqual>
            <isEqual compareValue="desc" property="dir">desc</isEqual>
          </isNotNull>
        </isNotNull>
      </dynamic>
    </sql>
    <delete id="Delete" parameterClass="System.Collections.IDictionary">
      set nocount on
      delete db from <include refid="Table"/> as db <include refid="Where"/>
    </delete>

    <update id="UpdatePart" parameterClass="System.Collections.IDictionary">
      set nocount on
      update db  <include refid="Set"/>  from  <include refid="Table"/> as db  <include refid="Where"/>
    </update>

    <select id="QueryPage" parameterClass="System.Collections.IDictionary" resultClass="YeePay_Trade">
      set nocount on
      <include refid="NoLock" />
      select t.* from (select row_number() over(<include refid="Order" />) as rownumber,db.* from <include refid="Table"/> as db <include refid="Where"/>) as t
      <include refid="RowBetween" />
    </select>
    <select id="QueryCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>
    <select id="GetCount" parameterClass="System.Collections.IDictionary" resultClass="int">
      set nocount on
      <include refid="NoLock" />
      select count(1) as value from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>

    <select id="GetItem" parameterClass="System.Collections.IDictionary" resultClass="YeePay_Trade">
      set nocount on
      <include refid="NoLock" />
      select db.*  from <include refid="Table"/> as db
      <include refid="Where"/>
    </select>
  </statements>
</sqlMap>